"" ->still prints tests

>> '$USER' -> does not create file

| echo hi -> leaks because of exit in tokinzing

echo hi | echo hi |	->conditional jumps in cmdtok_to_node


lexer_new.c cases:

export x=""ls -l""      >> valgrind
export x="ls \"-l\""    >>ms: x=ls \-l\     bash: x=ls "-l"

export T="l"
$Ts -a
			-> nothing happens, exitcode 0
			bash: -a command not found; exit 127


./ls

"./"ls

"./""ls"

"./"''"ls"
			->should not output ls




IMPLEMENT:
only Redirect 	-> does not create file so far
		-> check if redir is a directory

TESTER fails:

	/bin/echo $"42$"
		ms: 	42
		bash:	42$

	<< $USER\n
		ms:	->heredoc
		bash:	\n->heredoc
		
	export T="l"
	$Ts -a
		ms:	no error message
		bash:	-a: command not found

	cd --
		ms:	double error message
		bash:	egal

Pipeline:
	unset PATH
	/bin/ls
		ms:	nothing
		bash:	ls output

	ls | cat << stop | ls -la | cat << stop1
		ms:	prints wrong output
		bash:	not
		
	echo hi > in >> out | cat <out
		ms 	3hi
			out: 	(empty)
		bash 	hi
			out:	hi

SCMD:
	""
		ms:	wrong message, wrong stuff printed out
		bash:	error message

Syntax:

	/bin/cat <Makefile >
		ms: cat makefile..
		bash: syntax error

	ls | cat Makefile | cat << "asd" > out
		works but not if it is like this:
	ls|cat Makefile|cat<<"asd">out
			why???



	tabs will execute ls, why?

	cd "$H"O"ME"/Desktop/
	echo $?
		--> leaks!!!!

	cd --
		--> leaks!!!!

	export += ...
		-> does not do the trick


	exitstatus in den Builtins auf null setzen!! look at ft_echo